<?xml version="1.0" encoding="utf-8"?>
<!--
===============================================================================
Ant build script for the Jogre API - Beta 0.3
===============================================================================
-->

<project name="JOGRE API" default="compile" basedir=".">

    <description>
        This is the build file for the JOGRE API
    </description>

    <!--
    ===========================================================================
    Properties .
    ===========================================================================
    -->

    <property file="${basedir}/../build.properties"/>

    <!-- Normal Properties -->
    <property name="src.dir"   value="${basedir}/src"/>
    <property name="class.dir" value="${basedir}/classes"/>
    <property name="image.dir" value="${basedir}/images"/>
    <property name="jar.file"  value="jogre.jar"/>
    
    <!-- Testing properties -->
    <property name="test.dir"        value="${basedir}/test"/>
    <property name="test.src.dir"    value="${test.dir}/src"/>
    <property name="test.class.dir"  value="${test.dir}/classes"/>
    <property name="test.lib"        value="${test.dir}/lib"/>    
    <property name="test.report.dir" value="${test.dir}/report"/>
    
    <!-- Extra properties -->
    <property name="javadocs.dir" value="${basedir}/javadoc"/>
    
    <!-- Declare compile, test and test runtime classpaths -->
    <path id="test.classpath">
        <pathelement location="${class.dir}"/>
    	<pathelement location="${test.lib}/junit.jar"/>
    </path>
    <path id="test.run.classpath">
        <path refid="test.classpath" />
        <pathelement location="${test.class.dir}"/>
    </path>

    <!--
    ===========================================================================
    Target: init
    ===========================================================================
    -->
    <target name="init">
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${class.dir}"/>
        <mkdir dir="${test.class.dir}"/>
        <mkdir dir="${test.report.dir}"/>
    </target>

    <!--
    ===========================================================================
    Target: clean
    ===========================================================================
    -->
    <target name="clean" description="clean up">
    
        <!-- Delete class, javadoc, reports and jar files -->
        <delete dir="${class.dir}"/>
        <delete file="${jar.file}"/>
        <delete dir="${test.report.dir}"/>
        <delete dir="${test.class.dir}"/>
        <delete dir="${javadocs.dir}"/>
        
    </target>

    <!--
    ===========================================================================
    Target: compile and create JAR file
    ===========================================================================
    -->
    <target name="compile" depends="init"
        description="compile the source " >

        <!-- Compile the java code from ${src} into ${classes} -->
        <javac srcdir="${src.dir}" 
               destdir="${class.dir}" 
               debug="${build.debug}" 
               debuglevel="${build.debuglevel}" 
               source="${build.source}" 
               target="${build.target}" 
               deprecation="${build.deprecation}">
            <compilerarg line="${build.extraparams}"/>
        </javac>

        <copy todir="${class.dir}">
            <fileset dir="${basedir}">
                <include name="*.properties"/>
            </fileset>
        </copy>
    </target>

    <!--
    ===========================================================================
    Target: package
    ===========================================================================
    -->
    <target name="package" depends="compile" description="Package into jar file">
        <!-- Jar up the jogre.jar file -->
        <jar jarfile="${jar.file}" basedir="${class.dir}">
            <exclude name="**/*.html"/>
        </jar>
    </target>

    <!--
    ===========================================================================
    Target: compile test cases
    ===========================================================================
    -->
    <target name="compiletest" depends="compile" description="Compile test cases">
        <!-- Compile the java code from ${test.src} into ${test.classes} -->
        <javac srcdir="${test.src.dir}" 
               destdir="${test.class.dir}" 
               debug="${build.debug}" 
               debuglevel="${build.debuglevel}" 
               source="${build.source}" 
               target="${build.target}" 
               deprecation="${build.deprecation}">
            <classpath refid="test.classpath"/>
            <compilerarg line="${build.extraparams}"/>
        </javac>
    </target>
    
    <!--
    ===========================================================================
    Target: run test cases
    ===========================================================================
    -->
    <target name="test" depends="compiletest" description="Run test cases">
        <!-- Run junit tests -->
        <junit printsummary="no"
               showoutput="true"
               fork="true"
               haltonfailure="yes"
               haltonerror="yes"
        	   dir="${basedir}">
            <classpath refid="test.run.classpath" />

            <formatter type="plain" usefile="no"/>
            <formatter type="xml" />
            
            <batchtest fork="yes" todir="${test.report.dir}">
                <fileset dir="${test.src.dir}">
                    <include name="**/*Test.java" />
                </fileset>
            </batchtest>
        </junit>
            
        <!-- Create html test report -->
        <junitreport todir="${test.report.dir}">
            <fileset dir="${test.report.dir}">
                <include name="*.xml" />
            </fileset>
            <report format="frames"
                    todir="${test.report.dir}/html"/>
        </junitreport>
    </target>

    <!--
    ===========================================================================
    Target: Create javadoc
    ===========================================================================
     -->
    <target name="javadoc">
        <mkdir dir="${javadocs.dir}"/>
        <javadoc packagenames="*"
                sourcepath="${src.dir}"
                defaultexcludes="yes"
                destdir="${javadocs.dir}"
                author="true"
                version="true"
                use="true"
                windowtitle="Jogre API Documentation, Version ${version}"
                doctitle="Jogre API, Version ${version}"
                overview="${src.dir}/overview.html">
            <link href="http://java.sun.com/j2se/1.3/docs/api"/>
        </javadoc>
    </target>
    
    <!--
    ===========================================================================
    Target: All - Clean build, compile package and test.
            
            NOTE - Does not create JavaDoc target as this is done rarely.                 
    ===========================================================================
    -->
    <target name="all" depends="clean, package, test" 
            description="Clean and do a full clean compile, package and build"/>    
</project>
